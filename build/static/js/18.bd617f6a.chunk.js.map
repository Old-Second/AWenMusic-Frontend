{"version":3,"sources":["utils/format.ts","network/login/index.tsx","network/song/index.ts","utils/getRandom.ts","components/content/playCoin/store/actionCreators.ts","store/playType/actionCreators.ts","utils/verify.ts","utils/formatLyric.ts","components/content/detail/searchDetail/childCpn/song/style.tsx","components/content/detail/searchDetail/childCpn/song/index.tsx","network/request.tsx","views/Login/store/actionCreators.tsx","network/user/index.ts"],"names":["formatTime","dateS","fmt","date","Date","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","console","log","login","userName","password","request","url","method","data","register","getRecSong","offset","limit","params","getSongURL","id","getSongDetail","getLyric","addSongPlayCount","downloadSong","name","fetch","HOST_NAME","headers","authorization","store","getState","getIn","token","body","JSON","stringify","then","res","fileStream","streamSaver","createWriteStream","size","get","readableStream","window","WritableStream","pipeTo","writer","getWriter","reader","getReader","pump","read","done","close","write","value","getRandom","start","end","Math","floor","random","changeSongDetail","document","title","artist","type","songDetail","changeLyric","lyric","changeLyricLine","lyricLine","changeCurrentLyricIndex","index","currentLyricIndex","changeCurrentIndex","currentIndex","changePlayMode","playMode","changeSongDetailAction","dispatch","playlist","flag","findIndex","item","playType","changeSongURLAction","changeSongLyric","newPlaylist","push","changeCurrentSongAction","tag","rand","result","jwt","verify","algorithms","mp3Url","verifyURL","songUrl","lyricArray","lyricExp","lineLyric","split","exec","lyricObj","duration","content","trim","getFormatLyric","SongWrapper","styled","ul","Song","props","song","useSelector","state","useDispatch","map","className","toString","padStart","onClick","e","songPlay","history","pathname","artistRouter","album","albumRouter","style","height","display","alignItems","justifyContent","image","Empty","PRESENTED_IMAGE_SIMPLE","description","memo","config","instance","axios","create","baseURL","timeout","interceptors","use","err","response","status","message","logoutAction","changeUserMsg","userId","avatarUrl","createTime","updateTime","manage","auth","createBrowserHistory","userMsg","changeLoginType","loginType","changeUserDetailAction","getUserDetail","love","follow","localStorage","setItem","userDetail","loginAction","a","warning","fontSize","marginTop","clear","subscriber","thumb","songId","setUserFavorite","getUserFavorite","cancelFavorite","getUserSub","uploadAvatar","formData"],"mappings":"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","file":"static/js/18.bd617f6a.chunk.js","sourcesContent":["/*格式化时间*/\r\nexport function formatTime(dateS: number | string, fmt: string) {\r\n  let date: Date = new Date(dateS);\r\n  if (/(y+)/.test(fmt)) {\r\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n  }\r\n  let o = {\r\n    'M+': date.getMonth() + 1,\r\n    'd+': date.getDate(),\r\n    'h+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds()\r\n  };\r\n  for (let k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      // @ts-ignore\r\n      let str = o[k] + '';\r\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\r\n    }\r\n  }\r\n  return fmt || '';\r\n}\r\n\r\nfunction padLeftZero(str: string) {\r\n  return ('00' + str).substr(str.length);\r\n}\r\nconsole.log(formatTime(251179,\"mm:ss\"))","import request from '../request';\r\n//登录\r\nexport function login(userName: string, password: string) {\r\n  return request({\r\n    url: '/login',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n//注册\r\nexport function register(userName: string, password: string) {\r\n  return request({\r\n    url: '/register',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n","import request from '../request';\nimport store from '../../store';\n// @ts-ignore\nimport streamSaver from 'streamsaver';\nimport { HOST_NAME } from '../../config';\n\n//获取推荐歌曲\nexport function getRecSong<T>(offset: number = 0, limit: number = 30) {\n  return request<T>({\n    url: '/song/recommend',\n    params: {\n      offset,\n      limit\n    }\n  });\n}\n\n//获取歌曲播放地址\nexport function getSongURL(id: string) {\n  return request({\n    url: '/song/url',\n    params: {\n      id\n    }\n  });\n}\n\n//获取歌曲详情\nexport function getSongDetail(id: String) {\n  return request({\n    url: '/song/detail',\n    params: {\n      id\n    }\n  });\n}\n\n//获取歌词\nexport function getLyric(id: string) {\n  return request({\n    url: '/song/lyric',\n    params: {\n      id\n    }\n  });\n}\n\n//为歌曲添加播放量\nexport function addSongPlayCount(id: string) {\n  return request({\n    url: '/song/playCount',\n    method: 'post',\n    data: {\n      id\n    }\n  });\n}\n\n//下载歌曲\nexport function downloadSong(id: string, name: string) {\n  fetch(`${HOST_NAME}/song/download`, {\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ id })\n  }).then((res) => {\n    const fileStream = streamSaver.createWriteStream(name + '.mp3', {\n      size: res.headers.get('content-length')\n    });\n    const readableStream = res.body;\n    // @ts-ignore\n    if (window.WritableStream && readableStream.pipeTo) {\n      // @ts-ignore\n      return readableStream.pipeTo(fileStream).then(() => {});\n    }\n    // @ts-ignore\n    window.writer = fileStream.getWriter();\n    // @ts-ignore\n    const reader = res.body.getReader();\n    // @ts-ignore\n    const pump = () =>\n      reader.read().then((res) =>\n        // @ts-ignore\n        res.done ? window.writer.close() : window.writer.write(res.value).then(pump)\n      );\n    pump();\n  });\n}\n","const getRandom = (start: number, end: number): number => {\r\n  return Math.floor(Math.random() * (end - start + 1)) + start;\r\n};\r\nexport { getRandom };\r\n","import { addSongPlayCount, getLyric, getSongDetail, getSongURL } from '../../../../network/song';\nimport { ISong } from '../../../../constant/song';\nimport { getRandom } from '../../../../utils/getRandom';\nimport { changePlayType } from '../../../../store/playType/actionCreators';\nimport { getFormatLyric } from '../../../../utils/formatLyric';\nimport { verifyURL } from '../../../../utils/verify';\nimport { ISongStore } from '../../../../constant/store/song';\n\nexport function changeSongURL(res: string) {\n  return {\n    type: 'changeSongURL',\n    songUrl: res\n  };\n}\n\nexport function changeSongDetail(res: any) {\n  document.title = `${res.name} - ${res.artist ? res.artist.name : ''} - awen-music`;\n  return {\n    type: 'changeSongDetail',\n    songDetail: res\n  };\n}\n\nexport function changeLyric(res: any) {\n  return {\n    type: 'changeLyric',\n    lyric: res\n  };\n}\n\nexport function changeLyricLine(lyric: string) {\n  return {\n    type: 'changeLyricLine',\n    lyricLine: lyric\n  };\n}\n\nexport function changeCurrentLyricIndex(index: number) {\n  return {\n    type: 'changeCurrentLyricIndex',\n    currentLyricIndex: index\n  };\n}\n\n//添加到播放列表\nfunction changePlaylist(res: ISong[]) {\n  return {\n    type: 'changePlaylist',\n    playlist: res\n  };\n}\n\n//播放列表中歌曲索引\nfunction changeCurrentIndex(res: number) {\n  return {\n    type: 'changeCurrentIndex',\n    currentIndex: res\n  };\n}\n\n//改变播放模式\nexport function changePlayMode(res: number) {\n  return {\n    type: 'changePlayMode',\n    playMode: res\n  };\n}\n\nexport function changeSongDetailAction(id: string) {\n  return (dispatch: any, getState: any) => {\n    const { playlist } = getState().getIn(['songReducer', 'song']);\n    let flag = playlist.findIndex((item: ISong, index: number) => {\n      return item.id === id;\n    });\n    dispatch(changePlayType(0));\n    //播放列表中不存在\n    if (flag === -1) {\n      getSongDetail(id).then((data: any) => {\n        dispatch(changeSongDetail(data));\n        dispatch(changeSongURLAction(id));\n        dispatch(changeSongLyric(id));\n        const newPlaylist = [...playlist];\n        newPlaylist.push(data);\n        dispatch(changePlaylist(newPlaylist));\n        dispatch(changeCurrentIndex(newPlaylist.length - 1));\n      });\n      addSongPlayCount(id);\n    }\n    //播放列表中存在\n    if (flag !== -1) {\n      dispatch(changeCurrentIndex(flag));\n      dispatch(changeSongDetail(playlist[flag]));\n      dispatch(changeSongURLAction(id));\n      dispatch(changeSongLyric(id));\n      addSongPlayCount(id);\n    }\n  };\n}\n\nexport function changeCurrentSongAction(tag: number) {\n  return (dispatch: any, getState: any) => {\n    const { playMode }: ISongStore = getState().getIn(['songReducer', 'song']);\n    const { playlist }: ISongStore = getState().getIn(['songReducer', 'song']);\n    let { currentIndex }: ISongStore = getState().getIn(['songReducer', 'song']);\n    switch (playMode) {\n      case 1:\n        if (playlist.length !== 1) {\n          let rand = getRandom(0, playlist.length - 1);\n          while (rand === currentIndex) {\n            rand = getRandom(0, playlist.length - 1);\n          }\n          currentIndex = rand;\n        } else if (playlist.length === 1 || playlist.length === 0) {\n          currentIndex = 0;\n        }\n        break;\n      default:\n        currentIndex += tag;\n        if (currentIndex < 0) currentIndex = playlist.length - 1;\n        if (currentIndex > playlist.length - 1) currentIndex = 0;\n    }\n    dispatch(changeCurrentIndex(currentIndex));\n    dispatch(changeSongDetail(playlist[currentIndex]));\n    dispatch(changeSongURLAction(playlist[currentIndex].id));\n  };\n}\n\nexport function changeSongURLAction(id: string) {\n  return (dispatch: any) => {\n    getSongURL(id).then((data: any) => {\n      const { mp3Url } = data;\n      const url = verifyURL(mp3Url);\n      dispatch(changeSongURL(url));\n    });\n  };\n}\n\nexport function changeSongLyric(id: string) {\n  return (dispatch: any) => {\n    getLyric(id).then((data: any) => {\n      if (data.lyric) {\n        dispatch(changeLyric(getFormatLyric(data.lyric)));\n      } else {\n        dispatch(changeLyric('暂无歌词'));\n      }\n    });\n  };\n}\n","export function changePlayType(type: number) {\r\n  return {\r\n    type: 'changePlayType',\r\n    playType: type\r\n  };\r\n}\r\n","import jwt from 'jsonwebtoken';\n\nfunction verifyURL(url: string) {\n  const publicKey: string = `-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDVngqLlcT4xs9q18KCEWGaNYIa\nEMwSIus02VG3XVt8IGwT5Ws8Z1qCULz7jxERDKgSyfUM0EMOQ2KH/Z/ZhhZAld1r\nDCjxhiWLwXx5qYWJo9U862aYMQUjb3J5iqf2Wg+OuHPYkZ9oUvQl01kMRTkEkprf\nkNSJkagkgGMGph5OywIDAQAB\n-----END PUBLIC KEY-----`;\n  const result: any = jwt.verify(url, publicKey, {\n    algorithms: ['RS256']\n  });\n  if ((result && result.url) || (result && result.mp3Url)) {\n    console.log(result.url || result.mp3Url);\n    return result.url || result.mp3Url;\n  } else {\n    return '';\n  }\n}\n\nexport { verifyURL };\n","export const getFormatLyric = (lyric: string) => {\r\n  const lyricArray = [];\r\n  const lyricExp = /\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})\\]/;\r\n  const lineLyric = lyric.split('\\n');\r\n\r\n  for (let item of lineLyric) {\r\n    if (item) {\r\n      const result = lyricExp.exec(item);\r\n      if (!result) continue;\r\n      // @ts-ignore\r\n      const time1: any = result[1] * 60 * 1000;\r\n      // @ts-ignore\r\n      const time2: any = result[2] * 1000;\r\n      // @ts-ignore\r\n      const time3: any = result[3].length === 3 ? result[3] * 1 : result[3] * 10;\r\n      const duration = time1 + time2 + time3;\r\n      const content = item.replace(lyricExp, '').trim();\r\n      const lyricObj = { duration, content };\r\n      lyricArray.push(lyricObj);\r\n    }\r\n  }\r\n  return lyricArray;\r\n};\r\n","import styled from 'styled-components';\r\nexport const SongWrapper = styled.ul`\r\n  & > li {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px 20px;\r\n    &:nth-child(odd) {\r\n      background-color: #f9f9f9;\r\n    }\r\n    &:hover {\r\n      background-color: #f0f1f2;\r\n    }\r\n    .index {\r\n      color: #cfd2d9;\r\n      font-size: 13px;\r\n      padding: 0 15px 0 0;\r\n    }\r\n    .name {\r\n      width: 30%;\r\n      color: #0086b3;\r\n      display: flex;\r\n      align-items: center;\r\n      cursor: pointer;\r\n      & > span {\r\n        font-size: 13px;\r\n        max-width: 155px;\r\n        display: inline-block;\r\n        margin: 0 5px 0 0;\r\n      }\r\n    }\r\n    .album-name,\r\n    .artist-name {\r\n      color: #656565;\r\n      font-size: 13px;\r\n      width: 20%;\r\n      cursor: pointer;\r\n    }\r\n    .dt {\r\n      color: #9b9b9b;\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n","import React, { memo, FC, ReactElement } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Map } from 'immutable';\nimport { SongWrapper } from './style';\nimport { ISong } from '../../../../../../constant/song';\nimport { formatTime } from '../../../../../../utils/format';\n\nimport { changeSongDetailAction } from '../../../../playCoin/store/actionCreators';\nimport { Empty } from 'antd';\nimport { ISearchStore } from '../../../../../../constant/store/search';\n\nconst Song: FC<RouteComponentProps> = (props): ReactElement => {\n  const { song } = useSelector<Map<string, ISearchStore>, ISearchStore>((state) => {\n    return state.getIn(['searchReducer', 'searchResult']);\n  });\n  const dispatch = useDispatch();\n  const songPlay = (item: ISong, index: number): void => {\n    dispatch(changeSongDetailAction(item.id));\n  };\n  const artistRouter = (item: ISong, index: number) => {\n    props.history.push({\n      pathname: '/Home/artistDetail',\n      state: {\n        id: item.artist.id\n      }\n    });\n  };\n  const albumRouter = (item: ISong, index: number): void => {\n    props.history.push({\n      pathname: '/Home/albumDetail',\n      state: {\n        id: item.album.id\n      }\n    });\n  };\n  return (\n    <SongWrapper>\n      {song &&\n        song.length !== 0 &&\n        song.map((item: ISong, index: number) => {\n          return (\n            <li key={item.id}>\n              <div className=\"index\">{(index + 1).toString().padStart(2, '0')}</div>\n              <div className=\"name text-nowrap\" onClick={(e) => songPlay(item, index)}>\n                <span className=\"text-nowrap\">{item.name}</span>\n              </div>\n              <div className=\"artist-name\" onClick={(e) => artistRouter(item, index)}>\n                {item.artist.name}\n              </div>\n              <div className=\"album-name\" onClick={(e) => albumRouter(item, index)}>\n                {item.album.name}\n              </div>\n              <div className=\"dt\">{formatTime(item.duration!, 'mm:ss')}</div>\n            </li>\n          );\n        })}\n      {song && song.length === 0 && (\n        <div\n          style={{\n            height: '350px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'暂无歌曲'} />\n        </div>\n      )}\n    </SongWrapper>\n  );\n};\nexport default memo(Song);\n","import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { HOST_NAME } from '../config';\nimport store from '../store';\nimport { changeUserMsg, logoutAction } from '../views/Login/store/actionCreators';\nimport { createBrowserHistory } from 'history';\n\nfunction request<T>(config: AxiosRequestConfig) {\n  const instance: AxiosInstance = axios.create({\n    baseURL: HOST_NAME,\n    timeout: 15000\n  });\n  instance.interceptors.request.use(\n    (config) => {\n      return config;\n    },\n    (err) => {\n      console.log(err);\n      return err;\n    }\n  );\n  instance.interceptors.response.use(\n    (res) => {\n      return res.data;\n    },\n    (err) => {\n      if (err.response) {\n        const { status, data } = err.response;\n        if (status * 1 === 403 && data.message === '请登录') {\n          // @ts-ignore\n          store.dispatch(logoutAction());\n          store.dispatch(\n            changeUserMsg({\n              token: '',\n              userName: '',\n              userId: '',\n              avatarUrl: '',\n              createTime: '',\n              updateTime: '',\n              manage: -1,\n              auth: -1\n            })\n          );\n          createBrowserHistory().push({\n            pathname: '/Login'\n          });\n        } else {\n          throw err;\n        }\n      }\n    }\n  );\n  return instance.request<any, T>(config);\n}\n\nexport default request;\n","import { message } from 'antd';\nimport { login } from '../../../network/login';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { getUserDetail } from '../../../network/user';\nimport { ILoginUserAction } from './type';\nimport { IUserDetail, IUserMsg } from '../../../constant/store/login';\n\nexport function changeUserMsg(res: IUserMsg): ILoginUserAction {\n  return {\n    type: 'changeUserMsg',\n    userMsg: res\n  };\n}\n\nfunction changeLoginType(res: number): ILoginUserAction {\n  return {\n    type: 'changeLoginType',\n    loginType: res\n  };\n}\n\nfunction changeUserDetail(res: IUserDetail): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: res\n  };\n}\n\nfunction deleteUserDetail(): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: {\n      userId: '',\n      userName: '',\n      avatarUrl: '',\n      subscriber: [],\n      thumb: [],\n      follow: [{ userId: '' }],\n      love: [{ songId: '' }]\n    }\n  };\n}\n\nexport function changeUserDetailAction() {\n  return (dispatch: any) => {\n    getUserDetail().then((data: any) => {\n      const { love, follow } = data;\n      if (!love) {\n        data.love = [];\n      }\n      if (!follow) {\n        data.follow = [];\n      }\n      window.localStorage.setItem('userDetail', JSON.stringify(data));\n      dispatch(changeUserDetail(data));\n    });\n  };\n}\n\nexport function loginAction(userName: string, password: string, props: RouteComponentProps) {\n  return async (dispatch: any) => {\n    try {\n      const data: any = await login(userName, password);\n      if (data) {\n        await dispatch(changeUserMsg(data));\n        await dispatch(changeLoginType(1));\n        window.localStorage.setItem('userMsg', JSON.stringify(data));\n        window.localStorage.setItem('loginType', '1');\n        await dispatch(changeUserDetailAction());\n        props.history.push({\n          pathname: '/Home'\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      message.warning({\n        content: '用户名或者密码错误',\n        style: {\n          fontSize: '20px',\n          marginTop: '5vh'\n        }\n      });\n    }\n  };\n}\n\n//退出登录\nexport function logoutAction() {\n  return (dispatch: any) => {\n    window.localStorage.clear();\n    dispatch(changeLoginType(0));\n    dispatch(\n      changeUserMsg({\n        token: '',\n        userName: '',\n        userId: '',\n        avatarUrl: '',\n        createTime: '',\n        updateTime: '',\n        manage: -1,\n        auth: -1\n      })\n    );\n    dispatch(deleteUserDetail());\n  };\n}\n","import request from '../request';\nimport store from '../../store/index';\n\n//用户喜欢歌曲\nexport function setUserFavorite(id: string) {\n  return request({\n    url: '/user/favorite',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户喜欢歌曲\nexport function getUserFavorite(offset: number, limit: number) {\n  return request({\n    url: '/user/favorite',\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//取消用户喜欢\nexport function cancelFavorite(songId: string) {\n  return request({\n    url: '/user/favorite/cancel',\n    method: 'post',\n    data: {\n      songId: songId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户收藏\nexport function getUserSub(url: string, offset: number, limit: number) {\n  return request({\n    url: `/sub/user/${url}`,\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取当前登录用户详情\nexport function getUserDetail() {\n  return request({\n    url: '/user/detail',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//上传用户头像\nexport function uploadAvatar(formData: FormData) {\n  return request({\n    url: '/user/upload/avatar',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  });\n}\n"],"sourceRoot":""}